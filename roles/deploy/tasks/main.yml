---
- set_fact: this_release_ts="{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"

- set_fact: this_release_path="{{ releases_path }}/{{ this_release_ts }}"

- name: Send Gemrc to deployer home directory
  template: src=./../templates/gemrc dest="~/.gemrc"

- name: Creating Shared Folders
  file: path={{ item }} state=directory owner='deployer' group='deploy' mode=0775
  with_items:
    - "{{ shared_path }}"
    - "{{ shared_path }}/config"
    - "{{ shared_path }}/tmp"
    - "{{ shared_path }}/log"

- name: Create new release dir
  file: path={{ this_release_path }} state=directory owner='deployer' group='deploy' mode=0775

- name: Clone the Rails application repository
  git:  repo={{ git_url }} dest={{ this_release_path }} version={{ git_branch }} accept_hostkey=yes key_file=~/.ssh/priv_key
  register: gitclone

- name: Remove all releases shared folders
  file: dest={{ this_release_path }}/{{ item }} state=absent force=yes
  with_items:
    - log
    - config/database.yml
    - config/secrets.yml
    - tmp

- name: Symlink shared files
  file: src={{ shared_path }}/{{ item }} dest={{ this_release_path }}/{{ item }} state=link force=yes owner='deployer' group='deploy' mode=0775
  with_items:
    - log
    - config/database.yml
    - config/secrets.yml
    - tmp

- name: Sending the Database yml over
  template: src=./../templates/application_database.yml dest="{{ shared_path }}/config/database.yml"

- name: Sending the secrets yml over
  template: src=./../templates/secrets.yml dest="{{ shared_path }}/config/secrets.yml"

- name: Install bundle`
  command: bash -lc 'bundle install --without="development test"'
  environment:
      RAILS_ENV: production
  args:
    chdir: "{{ this_release_path }}"

- name: Run the Rails application's 'rake assets:precompile'
  command: bash -lc 'bundle exec rake assets:precompile'
  args:
    chdir: "{{ this_release_path }}"
  environment:
    RAILS_ENV: production

- name: Run the Rails application's 'rake db:migrate'
  command: bash -lc 'bundle exec rake db:migrate'
  args:
    chdir: "{{ this_release_path }}"
  environment:
    RAILS_ENV: production

- name: Symlink new release
  file: src={{ this_release_path }} dest={{ current_release_path }} state=link force=yes

- name: Cleanup
  shell: "ls -1t {{ releases_path }}|tail -n +{{ keep_releases + 1 }}|xargs rm -rf"
  args:
    chdir: '{{ releases_path }}'
  notify:
    - Restart Nginx
